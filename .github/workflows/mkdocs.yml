name: mkdocs
on:
  push:
    branches:
      - master
      - main

env:
  PAGES_DOMAIN: s.hilberg.eu
  GH_BRANCH: gh-pages
  TEX_REPO_PATH: 'tex'

permissions:
  contents: write

jobs:
  generate-latex:
    runs-on: ubuntu-latest
    outputs:
      tex_version: ${{ steps.tex-version.outputs.version }}
      tex_commit: ${{ steps.tex-commit.outputs.commit }}
    steps:
      - name: Checkout TEX Repo
        run: |
          /usr/bin/git clone https://${{ secrets.GITEA_REPO_SKRIPTE_USER }}:${{ secrets.GITEA_REPO_SKRIPTE_TOKEN }}@${{ secrets.GITEA_REPO_SKRIPTE_SERVER }}/${{ secrets.GITEA_REPO_SKRIPTE }} ${{ env.TEX_REPO_PATH }}
          /usr/bin/git config --global --add safe.directory ${{ env.TEX_REPO_PATH }}
          cd ${{ env.TEX_REPO_PATH }}
          /usr/bin/git checkout pipeline

      - name: "Install pip"
        working-directory: ${{ env.TEX_REPO_PATH }}
        run: |
          pip install -r requirements.txt

      - name: "Generate templates"
        working-directory: ${{ env.TEX_REPO_PATH }}
        run: |
          sudo apt-get install pandoc -y
          python main.py --render --ref $GITHUB_SHA

      - name: Set TEX-version
        id: tex-version
        run: |
          cd ${{ env.TEX_REPO_PATH }}
          echo "version=$(python main.py --version)" >> "$GITHUB_OUTPUT"

      - name: Set TEX-commit
        id: tex-commit
        run: |
          cd ${{ env.TEX_REPO_PATH }}
          echo "commit=$(python main.py --commit)" >> "$GITHUB_OUTPUT"

      - name: Compile Full LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: skript.tex
          working_directory: ${{ env.TEX_REPO_PATH }}/latex
          args: '-pdf -file-line-error -halt-on-error -interaction=nonstopmode -jobname=skript'

      - name: Upload LaTeX artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-latex
          path: |
            ${{ env.TEX_REPO_PATH }}/latex/skript.pdf
            ${{ env.TEX_REPO_PATH }}/latex/skript_aufgabenliste.tex

      - name: Upload LaTeX artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-markdown
          path: ${{ env.TEX_REPO_PATH }}/_temp


  deploy:
    runs-on: ubuntu-latest
    needs: generate-latex
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Download LaTeX artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-latex
          path: ${{ github.workspace }}/docs/files

      - name: Download Markdown artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-markdown
          path: ${{ github.workspace }}/docs

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 47271687+tna76874@users.noreply.github.com

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: |
          echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: |
          pip install -r requirements_docs.txt
      - env:
          TEX_VERSION: ${{needs.generate-latex.outputs.tex_version}}
          TEX_COMMIT: ${{needs.generate-latex.outputs.tex_commit}}
        run: |
          bash deploy.sh -b ${GH_BRANCH} -v ${TEX_VERSION} -c ${TEX_COMMIT}

  ensure-cname:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout-Code
      uses: actions/checkout@v4
      with:
        ref: ${{env.GH_BRANCH}}
        fetch-depth: 0

    - name: Configure Git Credentials
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "47271687+tna76874@users.noreply.github.com"

    - name: Check CNAME
      run: |
        if [ -f CNAME ]; then
          if [ "$(cat CNAME)" != "${PAGES_DOMAIN}" ]; then
            echo "${PAGES_DOMAIN}" > CNAME
            git add CNAME
            git commit -m "Update CNAME"
            git push
          fi
        else
          echo "${PAGES_DOMAIN}" > CNAME
          git add CNAME
            git commit -m "Add CNAME"
          git push
        fi